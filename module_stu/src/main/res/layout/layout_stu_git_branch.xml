<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical">

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="追踪分支/上游分支"
        app:fold_layout_res_id="@+id/content_branch_1" />

    <LinearLayout
        android:id="@+id/content_branch_1"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="从远程分支checkout一个本地分支,该本地分支被称为追踪分支(tracking branch),被追踪的分支被称为上游分支(upstream branch)" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="追踪分支可以理解为是和远程分支有直接关联的本地分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="执行git clone创建了本地仓库后,会自动创建一个追踪origin/master分支的本地追踪分支master" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="创建新的追踪分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git checkout -b [name] origin/[branch] //同时会切换到新分支" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="本地分支关联远程分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git branch -u origin/[branch]" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="删除本地分支和远程分支的关联" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git branch -d -r origin/[branch]" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="查看分支"
        app:fold_layout_res_id="@+id/content_branch_2" />

    <LinearLayout
        android:id="@+id/content_branch_2"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git branch //查看本地分支
                \ngit branch -r //查看远程分支
                \ngit branch -a //查看本地和远程的所有分支
                \ngit branch -vv //查看本地分支对应的上游分支" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="分支切换" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git checkout [name]" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="创建分支"
        app:fold_layout_res_id="@+id/content_branch_3" />

    <LinearLayout
        android:id="@+id/content_branch_3"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="创建本地分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git branch [name] //只创建并不会切换到新分支
            \ngit checkout -b [name] //创建并切换到新分支" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="创建远程分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git push origin [name] //将本地分支push到远程服务器" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="删除分支"
        app:fold_layout_res_id="@+id/content_branch_4" />

    <LinearLayout
        android:id="@+id/content_branch_4"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="删除本地分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git branch -d [name] // 删除前检查是否已经merge
                \ngit branch -D [name] // 不检查merge状态直接删除" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="删除远程分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git push origin -d [name]" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="合并分支"
        app:fold_layout_res_id="@+id/content_branch_5" />

    <LinearLayout
        android:id="@+id/content_branch_5"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git merge [feature]
            \ngit rebase [feature]
            \n将feature分支合并到当前的master分支" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="快进式" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="当前master分支所指向的提交是feature分支的直接上游
            \n所以只需要向前移动master分支的HEAD指针就能完成合并，且合并过程中没有冲突" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="递归三路合并" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="master分支所在提交并不是feature分支所在提交的直接祖先，也就是出现了分叉
            \n这时会使用两个分支的末端快照和两个分支的工作祖先，做一个简单的三方合并，生成一个新的提交指向两个分支的最后一次提交" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="使用三个符号标明冲突的地方，以及两个分支在该地方的冲突内容
            \n&#060;&#060;&#060;&#060;&#060;&#060;&#060;HEAD
            \nmaster分支的内容
            \n=======
            \nfeature分支的内容
            \n&#062;&#062;&#062;&#062;&#062;&#062;&#062;feature" />

    </LinearLayout>

</LinearLayout>