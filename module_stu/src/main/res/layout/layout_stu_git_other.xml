<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical">

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="代码回滚"
        app:fold_layout_res_id="@+id/content_git_reset" />

    <LinearLayout
        android:id="@+id/content_git_reset"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="本地分支回滚" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git reset --hard [commitId]" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="远程分支回滚" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git reset --hard commit id //本地分支回滚
                \ngit push origin :[name] //删除远程分支
                \ngit push origin [name] //用回滚后的本地分支重新建立远程分支" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="代码找回"
        app:fold_layout_res_id="@+id/content_git_fix" />

    <LinearLayout
        android:id="@+id/content_git_fix"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="有commit" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git reflog //查看所有发生过commit的记录
                    \ngit reset --hard HEAD@{*} //回退到你想要的commit" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="没有commit，但有add" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git fsck --lost-found
                    \n在项目git目录下的 /.git/lost-found/other里有你add过的文件
                    \n挨个看看，能救回来多少是多少吧" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="find .git/objects -type f | xargs ls -lt | sed 60q
                    \n找回本地仓库里边最近add的60个文件。找回思路同上" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="没有commit，没有add" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="放弃治疗，重写吧" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="git stash"
        app:fold_layout_res_id="@+id/content_git_stash" />

    <LinearLayout
        android:id="@+id/content_git_stash"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="没有在git 版本控制中的文件，是不能被git stash 存起来的
                    \n新增文件要先add一下" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git stash //存储暂存区的需改
                    \ngit stash pop //弹出存储恢复到工作区
                    \ngit stash pop  //弹出存储恢复到工作区
                    \ngit stash list //查看已有存储列表
                    \ngit stash save [msg] //存储时添加注释
                    \ngit stash apply //只恢复存储到工作区，但不删除
                    \ngit stash clear //清空已有存储列表
                    \ngit stash drop stash@{$num} //从列表中删除第num存储" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="stash@{$num}对第num个存储进行操作(num从0开始)" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git stash –keep-index //存储没有被add的文件" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="git cherry-pick"
        app:fold_layout_res_id="@+id/content_git_cherry_pick" />

    <LinearLayout
        android:id="@+id/content_git_cherry_pick"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="用于将某一个/多个commit转移到当前分支。这会在当前分支产生新的提交，当然它们的哈希值会不一样" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git cherry-pick [commitHash] //转移一个commit到当前分支
            \ngit cherry-pick [commitHash] [commitHash]//转移多个commit到当前分支
            \ngit cherry-pick A..B //转移A到B的所有提交到当前分支(不包含A)
            \ngit cherry-pick A&#094;..B //转移A到B的所有提交到当前分支(包含A)
            \ngit cherry-pick feature //合并feature分支的最后一次提交到当前分支" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="如果操作过程中发生代码冲突，Cherry pick 会停下来，让用户决定如何继续操作
            \n解决冲突后需要add加入暂存区，然后执行git cherry-pick --continue继续" />

    </LinearLayout>


    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="压缩多个commit为一个commit"
        app:fold_layout_res_id="@+id/content_git_pick" />

    <LinearLayout
        android:id="@+id/content_git_pick"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git rebase -i HEAD~2 // 压缩最后两次commit" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="执行上面的命令后会进入一个编辑页面，最近一次commit在列表的最下方
            \n将需要压缩的commit前面的pick更改为squash(必须保留一个pick)
            \n保存后会让你编辑新的commit说明(编辑区包含被压缩commit的说明)" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="修改某次提交的说明"
        app:fold_layout_res_id="@+id/content_git_amend" />

    <LinearLayout
        android:id="@+id/content_git_amend"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git commit --amend //修改最近一次提交的说明" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="先通过git log列出最近的提交找出想要修改的commitId
            \n1、git rebase -i HEAD~n //列出前n次的提交
            \n2、更改想要修改提交的pick为edit，然后保存退出
            \n3、git commit --amend 进入修改页面，完成修改后保存退出
            \n4、git rebase --continue 完成指定commit的修改
            \n再次执行git log 会发现指定的commit的说明已经修改了" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="执行上面的命令后会进入一个编辑页面，最近一次commit在列表的最下方
            \n将需要压缩的commit前面的pick更改为squash(必须保留一个pick)
            \n保存后会让你编辑新的commit说明(编辑区包含被压缩commit的说明)" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="恢复merge之前代码"
        app:fold_layout_res_id="@+id/content_git_abort" />

    <LinearLayout
        android:id="@+id/content_git_abort"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="当合并的过程中，由于冲突难解决，你想放弃合并，回到未合并之前的状态" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git merge --abort
            \ngit rebase --abort" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="导出代码"
        app:fold_layout_res_id="@+id/content_git_archive" />

    <LinearLayout
        android:id="@+id/content_git_archive"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="将master分支打包为output.tar.gz" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git archive --format tar.gz --output [xxx/output.tar.gz] master" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="打包文件格式" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git archive -l //获得支持的文件格式列表
            \n–format指明打包格式，若不指明此项，则根据–output中的文件名推断文件格式" />

        <com.sunny.lib.ui.SunnyTextView
            style="@style/StuTitleTextLevel2"
            android:text="打包某个目录" />

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git archive --output [path] master mydir mydir2 //打包某个目录
            \n没有指定目录时，默认打包当前目录" />

    </LinearLayout>

    <com.sunny.module.stu.base.view.FoldTextView
        style="@style/StuSubFoldText"
        android:text="清理空间"
        app:fold_layout_res_id="@+id/content_git_gc" />

    <LinearLayout
        android:id="@+id/content_git_gc"
        style="@style/StuSubContentLayout"
        android:visibility="gone">

        <com.sunny.module.stu.base.view.ContentView
            style="@style/StuContentText"
            android:text="git gc" />

    </LinearLayout>

</LinearLayout>