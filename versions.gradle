/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def deps = [:]

def versions = [:]
versions.arch_core = "2.0.0"

versions.dagger = "2.16"
versions.junit = "4.12"
versions.espresso = "3.0.1"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"
versions.android_gradle_plugin = "3.1.1"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.kotlin = "1.6.0"
versions.paging = "1.0.0-beta1"
versions.navigation = "2.0.0-rc02"
versions.stetho = "1.5.0"
//versions.core_ktx = "1.4.0"

// https://developer.android.google.cn/jetpack/androidx/releases/activity
def androidx = [:]
androidx.appcompat = 'androidx.appcompat:appcompat:1.2.0'
androidx.cardview = 'androidx.cardview:cardview:1.0.0'
androidx.recyclerview = 'androidx.recyclerview:recyclerview:1.2.0'
androidx.constraintlayout = 'androidx.constraintlayout:constraintlayout:2.1.2'
androidx.swiperefreshlayout = 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
androidx.work = 'androidx.work:work-runtime-ktx:2.5.0'
androidx.palette = 'androidx.palette:palette:1.0.0'
androidx.activity = 'androidx.activity:activity-ktx:1.2.0'
androidx.fragment = 'androidx.fragment:fragment-ktx:1.2.0'
//androidx.datastore = "androidx.datastore:datastore-preferences:1.0.0"

deps.androidx = androidx

versions.kotlin = "1.6.0"
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.stdlib_jre7 = "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
kotlin.test_junit = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

// https://developer.android.google.cn/jetpack/androidx/releases/lifecycle#kotlin
// https://developer.android.com/topic/libraries/architecture/viewmodel#kotlin
versions.lifecycle = "2.3.0"
def lifecycle = [:]
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.common = "androidx.lifecycle:lifecycle-common:$versions.lifecycle"
lifecycle.service = "androidx.lifecycle:lifecycle-service:$versions.lifecycle"
//lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.common_java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
deps.lifecycle = lifecycle

// https://github.com/Kotlin/kotlinx.coroutines
versions.coroutines = "1.6.0"
def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
deps.coroutines = coroutines

// https://square.github.io/okhttp/
// https://github.com/square/okhttp
def okhttp = [:]
okhttp.runtime = 'com.squareup.okhttp3:okhttp:4.8.1'
okhttp.logging_interceptor = 'com.squareup.okhttp3:logging-interceptor:3.9.0'
deps.okhttp = okhttp

versions.retrofit = "2.8.0"
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.retrofit = retrofit

// 路由 https://github.com/alibaba/ARouter/blob/master/README_CN.md
versions.arouter = "1.5.1"
def arouter = [:]
arouter.api = "com.alibaba:arouter-api:$versions.arouter"
arouter.compiler = "com.alibaba:arouter-compiler:$versions.arouter"
deps.arouter = arouter

// https://www.fresco-cn.org/
versions.fresco = "2.1.0"
def fresco = [:]
fresco.runtime = "com.facebook.fresco:fresco:$versions.fresco"
fresco.animated_base = "com.facebook.fresco:animated-base:$versions.fresco"
fresco.animated_gif = "com.facebook.fresco:animated-gif:$versions.fresco"
deps.fresco = fresco

// https://developer.android.google.cn/jetpack/androidx/releases/room
// https://developer.android.google.cn/training/data-storage/room/index.html
versions.room = "2.3.0"
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
deps.room = room

// https://github.com/bumptech/glide
versions.glide = "4.12.0"
def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
deps.navigation = navigation

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito


// other deps

versions.support = "1.2.0"
def support = [:]
support.material = "com.google.android.material:material:$versions.support"
deps.support = support

// https://github.com/JakeWharton/timber
deps.timber = 'com.jakewharton.timber:timber:5.0.1'

// https://github.com/Aspsine/SwipeToLoadLayout
deps.swipeToLoadLayout = 'com.github.Aspsine:SwipeToLoadLayout:1.0.4'


deps.paging = "android.arch.paging:runtime:$versions.paging"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.stetho = "com.facebook.stetho:stetho:$versions.stetho"
deps.agentweb = "com.github.Justson.AgentWeb:agentweb-core:v5.0.0-alpha.1-androidx"
ext.deps = deps

deps.versions = versions

def build_versions = [:]
build_versions.min_sdk = 28
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.3"
ext.build_versions = build_versions

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://jitpack.io' }
//    maven { url 'https://maven.aliyun.com/repository/public/' }
//    maven { url 'https://maven.aliyun.com/repository/google' }
//    maven { url 'https://maven.aliyun.com/repository/jcenter' }
//    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
}

ext.addRepos = this.&addRepos